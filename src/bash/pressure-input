#! /bin/bash
# Writen by Niraj K. Nepal, Ph.D.
# Script to produce input files for different pressure.
# Runs for 'mainprogram pressure-input'

echo "---------------------------------------------------------------------------------------------------------------"
echo "Generating input files for different pressure"
echo "---------------------------------------------------------------------------------------------------------------"
file=$(find * -name $3 | tail -n 1)
dft=$(grep "DFT" input.in | awk '{ print $3 }')
jj=$(echo 1 | bc)
for ((ii=$1; ii<$2; ++ii)); do
  A=$(grep "v$ii\ " $file | awk '{print $2}')
  B=$(grep "v$ii\ " $file | awk '{print $3}')
  echo "$A $B"
  if [ $dft == 'vasp' ] || [ $dft == 'VASP' ]; then
    if [[ -f pressure.in ]]; then
      NP=$(wc -l pressure.in | awk '{print $1}')
      NP=$(echo $NP+1 | bc)
    else
      echo "'pressure.in' file not found, creating an isotropic volume contraction with scaling factor of 0.94"
      echo "v1 0.94" > pressure.in
      NP=$(wc -l pressure.in | awk '{print $1}')
      NP=$(echo $NP+1 | bc)
    fi
  else
    if [[ -f pressure.in ]]; then
      NP=$(wc -l pressure.in | awk '{print $1}')
      NP=$(echo $NP | bc)
    else
      echo "'pressure.in' file not found, creating one with 10 GPa pressure and cell_dofree of 'all'"
      echo "all" > pressure.in
      echo "v1 100" >> pressure.in
      NP=$(wc -l pressure.in | awk '{print $1}')
      NP=$(echo $NP | bc)
    fi
  fi 
  for ((kk=1; kk<$NP; ++kk)); do 
      P=$(grep "v$kk\ " pressure.in | awk '{print $2}')
      if [ $dft == 'vasp' ] || [ $dft == 'VASP' ]; then
         if [[ ! -d R$A-$P-$B ]] ; then
            mkdir R$A-$P-$B
         fi
         if [[ ! -d R$A-$P-$B/relax ]] ; then
            mkdir R$A-$P-$B/relax
         fi
         cp R$A-$B/relax/KPOINTS R$A-$P-$B/relax/
         cp R$A-$B/relax/POTCAR R$A-$P-$B/relax/
         cp R$A-$B/relax/run.sh R$A-$P-$B/relax/
         #pcheck=$(echo "scale=4; $P" | bc -l)
         #pcheck=$(echo  "scale=4; $pcheck - 2" | bc -l)
         #zero=$(echo "scale=4; 0" | bc -l)
         #echo "$P"
         #echo "$pcheck"
         #if [[ $pcheck < $zero ]]; then
         ##if [[ $(echo "$pcheck < $zero" | bc -l) ]]; then
      
        P=$(echo "scale=3; $P" | bc -l)
        if [[ $P =~ \. ]]; then
            num=1
        else
            num=100
        fi
        if [ "$num" -lt 2 ]; then 
           #For scaling volume turn on following 2 sed command.
           sed '/ISIF/d' R$A-$B/relax/INCAR | sed '1i ISIF = 4' | sed '/NSW/d' | sed '2i NSW = 200' > R$A-$P-$B/relax/INCAR
           sed '2d' R$A-$B/relax/POSCAR | sed "2i $P" > R$A-$P-$B/relax/POSCAR
        else
          #For utilizing pressure, turn on following 3 command.
          sed '/ISIF/d' R$A-$B/relax/INCAR | sed '1i ISIF = 3' | sed '/NSW/d' | sed '2i NSW = 200' > R$A-$P-$B/relax/INCAR
          echo "PSTRESS = $P" >> R$A-$P-$B/relax/INCAR
          cp R$A-$B/relax/POSCAR R$A-$P-$B/relax/POSCAR
        fi
      fi
      if [ $dft == 'QE' ] || [ $dft == 'qe' ]; then
          relax_type=$(head -n 1 pressure.in)
          P=$(echo "scale=3; $P" | bc -l)
          if [[ $P =~ \. ]]; then
              num=1
          else
              num=100
          fi
          if [ "$num" -lt 2 ]; then 
          #if [[ $(echo "$P < $cutoff" | bc -l) ]]; then
           sed -n '/ATOMIC_POSITIONS/,/K_POINTS automatic/p' scf_dir/scf-relax-$A-$B.in | sed '$d' > position.dat
           sed -n '/&CONTROL/,/ATOMIC_POSITIONS/p' scf_dir/scf-relax-$A-$B.in | sed '$d' | sed '/pseudo_dir/d' | sed "/calculation = 'vc-relax',/a pseudo_dir = '../../../../pp/'," | sed "/&CELL/a cell_dofree = '$relax_type'" > scf-header.in
           sed -n '/ATOMIC_SPECIES/,/ATOMIC_POSITIONS crystal/p' scf_dir/scf-relax-$A-$B.in | sed '$d' > species.in
           sed -n '/K_POINTS/,/CELL_PARAMETERS/p' scf_dir/scf-relax-$A-$B.in | sed '$d' > kpoint.dat
           sed -n '/CELL_PARAMETERS/,/ATOMIC_SPECIES/p' scf_dir/scf-relax-$A-$B.in | sed '1d' > cellpar.dat
           # Specify the file containing the matrix
           file_name="cellpar.dat"
           mapfile -t lines < "$file_name"
           echo "CELL_PARAMETERS angstrom" > newcellpar.dat
           # Loop through each line to split it into elements and add 2 to each element
           for i in "${!lines[@]}"; do
               read -ra elements <<< "${lines[$i]}"
               string=''
               for j in "${!elements[@]}"; do
                   elem=${elements[j]}
                   array=$(echo "scale=8;$elem * $P" | bc -l)
                   string="$string$array "
               done
               echo "$string" >> newcellpar.dat
           done
            cat scf-header.in position.dat kpoint.dat newcellpar.dat > scf_dir/scf-$A-$P.in
            rm scf-header.in species.in position.dat kpoint.dat newcellpar.dat
          else
            if [[ -f scf_dir/scf-relax-$A-$B.in ]]; then
              if [ $relax_type == 'all' ]; then
                sed "/&CELL/a   press = $P," scf_dir/scf-relax-$A-$B.in > scf_dir/scf-$A-$P.in
              else
                sed "/&CELL/a   press = $P, cell_dofree = '$relax_type'," scf_dir/scf-relax-$A-$B.in > scf_dir/scf-$A-$P.in
              fi
              
            else
              if [ $relax_type == 'all' ]; then
                sed "/&CELL/a   press = $P," scf_dir/scf-$A.in > scf_dir/scf-$A-$P.in
              else
                sed "/&CELL/a   press = $P, cell_dofree = '$relax_type'," scf_dir/scf-$A.in > scf_dir/scf-$A-$P.in
              fi
               echo "Structure is not relaxed, use 'mainprogram process' with process=1 to 3"
               echo "Unrelaxed structure is used...."
            fi
          fi
      fi
      echo "v$kk $A-$P $B" >> mpid-pressure-1.in
      echo "v$jj $A-$P $B" >> mpid-pressure-2.in
      jj=$(echo $jj + 1 | bc)
done
done
echo "**************************************************************************************************"
echo "scf-mpid-pressure.in files created inside scf_dir for QE, and Rmpid-pressure-compound/ folder created for VASP"
echo "Here, pressure can either be volume fraction or pressure in kbar"
echo "For energy-volume calculations, use 'mainprogram 26' command that uses mpid-pressure-1.in file."
echo "For other calculations, update 'input.in' file with mpid-pressure-2.in and run 'mainprogram 1'"
